{"version":3,"sources":["App/App.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/Buttons/Buttons.styled.jsx","redux/PhoneBook/actions.js","redux/PhoneBook/selectors.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App/App.js","redux/PhoneBook/reducers.js","redux/store.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","Form","form","Label","label","Input","input","Button","button","addContact","createAction","name","number","payload","id","uuidv4","removeContact","getFilteredName","contacts","state","items","connect","item","dispatch","onSubmit","data","useState","setName","setNumber","stateContact","useSelector","useDispatch","nameId","numberId","handleChange","e","target","value","newContact","addToContact","some","contact","toLowerCase","notification","Notify","warning","action","preventDefault","htmlFor","onChange","type","pattern","title","required","List","ul","ListItem","li","nameFilter","filter","includes","deleteId","map","onClick","Wrapper","div","App","itemReducer","createReducer","filterReducer","contactsReducer","combineReducers","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"+PAEaA,EAAeC,IAAOC,GAAV,8DAKZC,EAAiBF,IAAOG,GAAV,kE,QCLdC,EAAOJ,IAAOK,KAAV,gKASJC,EAAQN,IAAOO,MAAV,gDAILC,EAAQR,IAAOS,MAAV,iECbLC,EAASV,IAAOW,OAAV,yQ,uBCCNC,EAAaC,YACxB,sBACA,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACrBC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAKOI,EAAgBN,YAAa,yBAC7BO,EAAkBP,YAAa,4BCf/BQ,EAAW,SAACC,GAAD,OAAWA,EAAMD,SAASE,O,OCwFlD,I,IAQeC,eARS,SAAAF,GAAK,MAAK,CAChCD,SAAUC,EAAMD,SAASI,SAGA,SAAAC,GAAQ,MAAK,CACtCC,SAAU,SAAAC,GAAI,OAAIF,EAASd,EAAWgB,QAGzBJ,EAvFf,WACE,MAAwBK,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOd,EAAP,KAAegB,EAAf,KAEMC,EAAeC,YAAYZ,GAC3BK,EAAWQ,cAEXC,EAASjB,cACTkB,EAAWlB,cAEXmB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAER,OAFA,EAAe1B,MAGb,IAAK,OACHgB,EAAQU,GACR,MACF,IAAK,SACHT,EAAUS,GACV,MACF,QACE,SAYAC,EAAa,WACjB,IAAMC,EAAe,CACnB5B,OACAC,UAEFiB,EAAaW,MACX,SAAAC,GAAO,OAAIA,EAAQ9B,KAAK+B,gBAAkBH,EAAa5B,KAAK+B,iBAE1DC,EAAaJ,EAAa5B,MAC1BY,EAASd,EAAW8B,KAGpBI,EAAe,SAAAhC,GAAI,OACvBiC,SAAOC,QAAQlC,EAAO,6BAExB,OACE,mCACE,eAACV,EAAD,CAAM6C,OAAO,GAAGtB,SAzBC,SAAAW,GACnBA,EAAEY,iBAEFT,IACAX,EAAQ,IACRC,EAAU,KAoBR,UACE,cAACzB,EAAD,CAAO6C,QAAQ,OAAf,kBACA,cAAC3C,EAAD,CACE4C,SAAUf,EACVgB,KAAK,OACLvC,KAAK,OACLG,GAAIkB,EACJK,MAAO1B,EACPwC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,cAAClD,EAAD,CAAO6C,QAAQ,SAAf,oBACA,cAAC3C,EAAD,CACE4C,SAAUf,EACVgB,KAAK,MACLvC,KAAK,SACLG,GAAImB,EACJI,MAAOzB,EACPuC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,cAAC9C,EAAD,CAAQ2C,KAAK,SAAb,kCChFKI,EAAOzD,IAAO0D,GAAV,8EAKJC,EAAW3D,IAAO4D,GAAV,oECkBrB,I,MAAMC,EAAa,SAAAvC,GACjB,OAAOA,EAAMD,SAASE,MAAMuC,QAAO,SAAAlB,GAAO,OACxCA,EAAQ9B,KAAK+B,cAAckB,SAASzC,EAAMD,SAASyC,OAAOjB,mBAY/CrB,eARS,SAAAF,GAAK,MAAK,CAChCD,SAAUwC,EAAWvC,OAGI,SAAAI,GAAQ,MAAK,CACtCsC,SAAU,SAAA/C,GAAE,OAAIS,EAASP,EAAcF,QAG1BO,EAlCf,YAA+C,IAAvBH,EAAsB,EAAtBA,SAAU2C,EAAY,EAAZA,SAChC,OACE,8BACE,cAACP,EAAD,UACGpC,EAAS4C,KAAI,SAAArB,GACZ,IAAQ3B,EAAqB2B,EAArB3B,GAAIH,EAAiB8B,EAAjB9B,KAAMC,EAAW6B,EAAX7B,OAClB,OACE,eAAC4C,EAAD,WACG7C,EADH,MACYC,EAAQ,IAClB,cAACL,EAAD,CAAQ2C,KAAK,SAASa,QAAS,kBAAMF,EAAS/C,IAA9C,sBAFaA,aCVdkD,EAAUnE,IAAOoE,IAAV,sGAMP5D,EAAQR,IAAOS,MAAV,iEAKLH,EAAQN,IAAOO,MAAV,iDCMHiB,eARS,SAAAF,GAAK,MAAK,CAChCkB,MAAOlB,EAAMD,SAASyC,WAGG,SAAApC,GAAQ,MAAK,CACtC0B,SAAU,SAAAd,GAAC,OAAIZ,EAASN,EAAgBkB,EAAEC,OAAOC,YAGpChB,EAfA,SAAC,GAAD,IAAGgB,EAAH,EAAGA,MAAOY,EAAV,EAAUA,SAAV,OACb,eAACe,EAAD,WACE,cAAC,EAAD,CAAOhB,QAAQ,SAAf,mCACA,cAAC,EAAD,CAAOE,KAAK,OAAOvC,KAAK,SAAS0B,MAAOA,EAAOY,SAAUA,UCF9C,SAASiB,IACtB,OACE,qCACE,cAACtE,EAAD,wBACA,cAAC,EAAD,IAEA,cAACG,EAAD,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,O,oDCTAoE,GAAcC,YAClB,CACE,CAAEtD,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALjB,mBAQ5BH,GAAa,SAACU,EAAD,OAAUN,EAAV,EAAUA,QAAV,4BAA4BM,GAA5B,CAAmCN,OARpB,cAS5BG,GAAgB,SAACG,EAAD,OAAUN,EAAV,EAAUA,QAAV,OACfM,EAAMwC,QAAO,qBAAG7C,KAAgBD,QAVL,IAc3BwD,GAAgBD,YAAc,GAAD,eAChCnD,GAAkB,SAACE,EAAD,YAAUN,YAQhByD,GALSC,YAAgB,CACtCnD,MAAO+C,GACPR,OAAQU,KCVJG,GAAgB,CACpBC,IAAK,WACLC,aAGIC,GAAcJ,YAAgB,CAClCrD,SAAUoD,KAGNM,GAAmBC,YAAeL,GAAeG,IAEjDG,GAAQC,YAAe,CAC3BC,QAASJ,GACTK,UAAUC,EACVC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,WAK5DC,GAAYC,YAAahB,IC5B/BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnB,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaoB,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC3B,EAAD,UAINiC,SAASC,eAAe,W","file":"static/js/main.f4a171b1.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PrimaryTitle = styled.h1`\r\nmargin-left: 75px;\r\ncolor: gray;\r\n`;\r\n\r\nexport const SecondaryTitle = styled.h2`\r\n  margin-left: 75px;\r\n  color: gray;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #ebdc0e;\r\n  border: none;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #c2bc15;\r\n  }\r\n`;","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(\n  \"contact/addContact\",\n  ({ name, number }) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  })\n);\n\nexport const removeContact = createAction(\"contact/removeContact\");\nexport const getFilteredName = createAction(\"contact/filteredContacts\");\n","export const contacts = (state) => state.contacts.items;\nexport const filter = (state) => state.contacts.filter;\n","import { Form, Label, Input} from './ContactsForm.styled';\r\nimport { Button } from '../Buttons/Buttons.styled';\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useDispatch, useSelector, connect } from 'react-redux';\r\nimport { Notify } from \"notiflix\";\r\nimport { addContact } from '../../redux/PhoneBook/actions';\r\nimport { contacts } from '../../redux/PhoneBook/selectors';\r\n\r\nfunction ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const stateContact = useSelector(contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    newContact();\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const newContact = () => {\r\n    const addToContact = {\r\n      name,\r\n      number,\r\n    };\r\n    stateContact.some(\r\n      contact => contact.name.toLowerCase() === addToContact.name.toLowerCase(),\r\n    )\r\n      ? notification(addToContact.name)\r\n      : dispatch(addContact(addToContact));\r\n  };\r\n\r\n  const notification = name =>\r\n    Notify.warning(name + \" is already in contacts.\")\r\n\r\n  return (\r\n    <>\r\n      <Form action=\"\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={nameId}\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <Label htmlFor=\"number\">Number</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={numberId}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <Button type=\"submit\"> Add contact</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.item,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsForm);\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;\r\n","import { List, ListItem } from \"./ContactsList.styled\";\r\nimport { Button } from '../Buttons/Buttons.styled';\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/PhoneBook/actions\";\r\n\r\nfunction ContactsList({ contacts, deleteId }) {\r\n  return (\r\n    <div>\r\n      <List>\r\n        {contacts.map(contact => {\r\n          const { id, name, number } = contact;\r\n          return (\r\n            <ListItem key={id}>\r\n              {name} - {number}{' '}\r\n              <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                Delete\r\n              </Button>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst nameFilter = state => {\r\n  return state.contacts.items.filter(contact =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: nameFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteId: id => dispatch(removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import { Wrapper, Label, Input } from \"./Filter.styled\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFilteredName } from \"../../redux/PhoneBook/actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <Wrapper>\r\n    <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n    <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n  </Wrapper>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(getFilteredName(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\nimport ContactsForm from \"../components/ContactsForm/ContactsForm\";\nimport ContactsList from \"../components/ContactsList/ContactsList.jsx\";\nimport Filter from \"../components/Filter/Filter.jsx\";\n\nexport default function App() {\n  return (\n    <>\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactsForm />\n\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, removeContact, getFilteredName } from \"./actions\";\n\nconst itemReducer = createReducer(\n  [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [removeContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  }\n);\n\nconst filterReducer = createReducer(\"\", {\n  [getFilteredName]: (state, { payload }) => (state = payload),\n});\n\nconst contactsReducer = combineReducers({\n  items: itemReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./PhoneBook/reducers\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App/App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}